<?xml version="1.0"?>
<project
 name="Jakarta POI">
   <info
    module="jakarta-poi"
    version="1.5"
    tag="dev"
    year="2001-2002"/>

   <description>
      <short>The POI project consists of APIs for manipulating various file formats based upon Microsoft's OLE 2 Compound Document format using pure Java.</short>

      <detailed>A common misconception is that POI writes Excel files. POI is the name of the project. POI contains several components, one of which, HSSF, writes Excel files. The following are components of the entire POI project.POIFS is the oldest and most stable part of the project. It is our port of the OLE 2 Compound Document Format to pure Java. It supports both read and write functionality. All of our components ultimately rely on it by definition. HSSF is our port of the Microsoft Excel 97(-2002) file format (BIFF8) to pure Java. It supports read and write capability. HDF is our port of the Microsoft Word 97 file format to pure Java. It supports read and write capability. This component is in the early stages of design. Jump in! </detailed>

      <where>The home page for the POI project can be found on the web site (http://jakarta.apache.org/poi/). There you also find information on how to download the latest release as well as all the other information you might need regarding this project.</where>

      <requirements>The for installing it you need a Java 1.2 or later compatible virtual machine for your operating system.</requirements>

      <howto>The documentation available as of the date of this release is included in the "docs/" directory. The documentation sources are in the "src/documentation" directory. Look for the most updated documentation on the web site.</howto>

      <licence>For legal and licensing issues, please read the LICENSE.* files in the /legal directory.</licence>
   </description>

<module name="jakarta-poi">

  <url href="http://jakarta.apache.org/poi/"/>
  <description>
    Ports of file formats based on Microsoft's OLE 2 Compound Document 
    Format (tm) to pure Java (tm). 
  </description>

  <cvs repository="jakarta"/>
  
  <project name="jakarta-poi">
  
    <package>org.apache.poi</package>

    <ant target="gump"/>
    
    <script name="build"/>
    
    <depend project="jakarta-ant"/>
    <depend project="xml-xerces"/>
    <depend project="xml-xalan2"/>
    <depend project="jtidy"/>
    <depend project="junit"/>
    <depend project="commons-logging"/>
    
    <option project="jakarta-log4j"/>
      
    <work nested="build/jakarta-poi/classes"/>

    <home nested="build/poi"/>
    
    <jar name="jakarta-poi.jar"            id="poi"/>
    <jar name="jakarta-poi-scratchpad.jar" id="scratchpad"/>
    <jar name="jakarta-poi-contrib.jar"    id="contrib"/>
    <jar name="jakarta-poi-examples.jar"   id="examples"/>
    
    <javadoc parent="build/jakarta-poi/docs/apidocs"/>

  </project>

</module>

   <developers>
       <!-- in strict alphabetical order -->
      <person name="Andrew C. Oliver"   email="acoliver@apache.org"   id="ACO" />
      <person name="Glen Stampoultzis"  email="glens@apache.org"      id="GS" />
      <person name="Marc Johnson"       email="mjohnson@apache.org"   id="MJ" />
      <person name="Nicola Ken Barozzi" email="nicolaken@apache.org"  id="NKB" />
      <person name="Rainer Klute"       email="rainer.klute@epost.de" id="RK" />
   </developers>

   <todo>
      <actions priority="medium">
         <action context="code" assigned-to="NKB">

         </action>
      </actions>
   </todo>

   <credits>
      <credit>This product includes software developed by the Krysalis Project (http://www.krysalis.org/).</credit>
   </credits>
</project>

